* {
  box-sizing: border-box;
}

body {
  font-family: sans-serif;
  margin: 20px;
  padding: 0;
}

h1 {
  margin-top: 0;
  font-size: 22px;
}

h2 {
  margin-top: 0;
  font-size: 20px;
}

h3 {
  margin-top: 0;
  font-size: 18px;
}

h4 {
  margin-top: 0;
  font-size: 16px;
}

h5 {
  margin-top: 0;
  font-size: 14px;
}

h6 {
  margin-top: 0;
  font-size: 12px;
}

code {
  font-size: 1.2em;
}

ul {
  padding-inline-start: 20px;
}

* {
  box-sizing: border-box;
}

body {
  font-family: sans-serif;
  margin: 20px;
  padding: 0;
}

.square {
  background: #fff;
  border: 1px solid #999;
  float: left;
  font-size: 24px;
  font-weight: bold;
  line-height: 34px;
  height: 34px;
  margin-right: -1px;
  margin-top: -1px;
  padding: 0;
  text-align: center;
  width: 34px;
}

.board-row:after {
  /* 
  `:after`는 가상 요소로 .board-row 요소의 마지막에 보이지 않는 요소를 추가. 이 요소는 레이아웃 정리(clearfix)를 위해 사용됨
  */

  clear: both;
  /*
  `clear: both`는 이전에 float 속성이 적용된 요소들(좌/우 모두)로부터 영향을 받지 않도록 한다.
  이를 통해 부모 요소(.board-row)가 자식 요소들의 높이를 제대로 감지할 수 있게 된다.
  */

  content: '';
    /*
   가상 요소의 콘텐츠를 설정한다. 빈 문자열로 설정하여 시각적으로 아무것도 표시하지 않는다.
   이 속성은 :after 가상 요소를 생성하는 데 필수적이다.
  */

  display: table;
  /*
  가상 요소의 display 속성을 `table`로 설정하여 요소가 레이아웃의 흐름에 참여하도록 만듦.
  이를 통해 float로 인해 부모 요소가 무너지는 문제를 방지
  */
}

.status {
  margin-bottom: 10px;
}
.game {
  display: flex;
  flex-direction: row;
}

.game-info {
  margin-left: 20px;
}

button {
  background-color: rgb(243, 220, 156);
  border-radius: 8px;
  border: solid 1px;
  padding: 3px 6px;
  margin: 2px;
}

@keyframes pulse {
  0%, 100% {
    transform: scale(1);
    color: #ff4500;
  }
  50% {
    transform: scale(1.1);
    color: #ffd700;
  }
}

.winner {
  animation: pulse 1.5s ease-in-out 3;
  font-weight: bold;
}
